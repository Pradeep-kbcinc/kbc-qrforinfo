import{F as m,ag as g,ai as h,r as l,M as d,e as f,N as b,ao as R,k as S,ab as r}from"#entry";const x=m({class:[String,Array,Object],style:{type:[String,Array,Object],default:null}},"component");function y(t){const o=g("useRender");o.render=t}function W(t){let o=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"content";const e=h(),i=l();if(d){const s=new ResizeObserver(n=>{t?.(n,s),n.length&&(o==="content"?i.value=n[0].contentRect:i.value=n[0].target.getBoundingClientRect())});f(()=>{s.disconnect()}),b(()=>e.el,(n,a)=>{a&&(s.unobserve(a),i.value=void 0),n&&s.observe(n)},{flush:"post"})}return{resizeRef:e,contentRect:R(i)}}const H=m({tag:{type:[String,Object,Function],default:"div"}},"tag"),N=m({height:[Number,String],maxHeight:[Number,String],maxWidth:[Number,String],minHeight:[Number,String],minWidth:[Number,String],width:[Number,String]},"dimension");function O(t){return{dimensionStyles:S(()=>{const e={},i=r(t.height),s=r(t.maxHeight),n=r(t.maxWidth),a=r(t.minHeight),c=r(t.minWidth),u=r(t.width);return i!=null&&(e.height=i),s!=null&&(e.maxHeight=s),n!=null&&(e.maxWidth=n),a!=null&&(e.minHeight=a),c!=null&&(e.minWidth=c),u!=null&&(e.width=u),e})}}export{x as a,y as b,O as c,N as d,H as m,W as u};
